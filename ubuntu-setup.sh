#!/bin/bash\n\n# Atualizar pacotes do sistema\nsudo apt update && sudo apt upgrade -y\n\n# Instalar dependências do sistema\nsudo apt install -y git curl build-essential\n\n# Instalar Node.js e npm\ncurl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n# Instalar PostgreSQL\nsudo apt install -y postgresql postgresql-contrib\n\n# Iniciar e configurar PostgreSQL\nsudo systemctl start postgresql\nsudo systemctl enable postgresql\n\n# Criar usuário e base de dados no PostgreSQL\nsudo -i -u postgres psql -c "CREATE USER erpuser WITH PASSWORD 'safepassword';"\nsudo -i -u postgres psql -c "CREATE DATABASE erpdb OWNER erpuser;"\n\n# Clonar o repositório do projeto\nif [ ! -d "erp-web-system" ]; then\n  git clone https://github.com/foxgts/erp-web-system.git\nfi\ncd erp-web-system\n\n# Configuração do Sequelize para PostgreSQL\necho "const { Sequelize } = require('sequelize');\nconst sequelize = new Sequelize('erpdb', 'erpuser', 'safepassword', {\n  host: 'localhost',\n  dialect: 'postgres'\n});\n\n(async () => {\n  try {\n    await sequelize.authenticate();\n    console.log('Connected to PostgreSQL!');\n  } catch (error) {\n    console.error('Unable to connect to the database:', error);\n  }\n})();\n\nmodule.exports = sequelize;" > backend/db.js\n\n# Configurar backend para conectar ao PostgreSQL\nnpm install sequelize pg\n\n# Instalar dependências do backend\ncd backend\nnpm install\n\n# Instalar dependências do frontend\ncd ../frontend/app\nnpm install\n\n# Construa e inicie o frontend\nnpm run build\n\n# Iniciar servidor de desenvolvimento do frontend e backend\nnpm run dev & (cd ../../backend && node index.js &)\n\necho "Configuração completa! O sistema ERP está rodando."
